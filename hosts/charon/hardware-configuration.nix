# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c137f7b0-2c58-4164-a450-4e9ad2f235ae";
      fsType = "ext4";
    };

  fileSystems."/mnt/nvme1n1" =
    { device = "/dev/disk/by-uuid/6ec1601f-4779-4384-bea8-71871bda450e";
      fsType = "ext4";
    };

  fileSystems."/mnt/sdb" =
    { device = "/dev/disk/by-uuid/8f19155e-0c39-4e46-a27d-633a02942aed";
      fsType = "ext4";
    };
  fileSystems."/mnt/sdc" =
    { device = "/dev/disk/by-uuid/91e3c532-46b7-4df8-a50b-5a10974277fa";
      fsType = "ext4";
    };
      
  boot.initrd.luks.devices."luks-09a238d3-0cd1-491e-907c-4a8b74a80c79".device = "/dev/disk/by-uuid/09a238d3-0cd1-491e-907c-4a8b74a80c79";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DE44-6E30";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
